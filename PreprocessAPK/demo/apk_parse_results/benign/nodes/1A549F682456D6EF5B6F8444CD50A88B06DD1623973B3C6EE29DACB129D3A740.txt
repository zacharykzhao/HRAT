<com.tunesaccess.android.activity.WebViewActivity: void onCreate(android.os.Bundle)>
<com.tunesaccess.android.commons.TACommon: void <clinit>()>
<com.tunesaccess.android.activity.WebViewActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<com.tunesaccess.android.activity.WebViewActivity$MyWebViewClient: void <init>(com.tunesaccess.android.activity.WebViewActivity,com.tunesaccess.android.activity.WebViewActivity$MyWebViewClient)>
<com.tunesaccess.android.activity.WebViewActivity$MyWebViewClient: void <init>(com.tunesaccess.android.activity.WebViewActivity)>
<android.webkit.WebViewClient: void <init>()>
<android.app.Activity: void onCreate(android.os.Bundle)>
<com.tunesaccess.android.activity.WebViewActivity: android.content.Intent getIntent()>
<android.app.Activity: void setContentView(int)>
<android.app.Activity: android.view.View findViewById(int)>
<com.tunesaccess.android.activity.WebViewActivity: void <init>()>
<android.app.Activity: void <init>()>
<com.tunesaccess.android.player.TAAudioPlayerController$5: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<com.tunesaccess.android.player.TAAudioPlayerController: void access$1(com.tunesaccess.android.player.TAAudioPlayerController,int)>
<com.tunesaccess.android.player.TAAudioPlayerController$5: void onStopTrackingTouch(android.widget.SeekBar)>
<com.tunesaccess.android.player.TAAudioPlayerController$5: void onStartTrackingTouch(android.widget.SeekBar)>
<com.tunesaccess.android.player.TAAudioPlayerController$5: void <init>(com.tunesaccess.android.player.TAAudioPlayerController)>
<java.lang.Object: void <init>()>
<java.lang.Object: void finalize()>
<java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()>
<java.lang.Throwable: void <init>()>
<com.tunesaccess.android.player.TAAudioPlayerController: void <init>(com.tunesaccess.android.player.TAAudioPlayerController$TAAudioPlayerControllerListener,android.app.Activity)>
<com.tunesaccess.android.model.SongMapList: void <clinit>()>
<com.tunesaccess.android.player.TAAudioPlayer: com.tunesaccess.android.player.TAAudioPlayer getSharedInstance()>
<com.tunesaccess.android.model.SongMapList: com.tunesaccess.android.model.SongMapList getSharedInstance()>
<com.tunesaccess.android.player.TAAudioPlayer: void <clinit>()>
<com.tunesaccess.android.player.TAAudioPlayer: void <init>()>
<com.tunesaccess.android.model.UserInfo: com.tunesaccess.android.model.UserInfo getSharedInstance()>
<com.tunesaccess.android.model.UserInfo: void <clinit>()>
<com.tunesaccess.android.model.UserInfo: void <init>()>
<com.tunesaccess.android.player.TAAudioPlayer$6: void <init>(com.tunesaccess.android.player.TAAudioPlayer)>
<com.tunesaccess.android.player.TAAudioPlayer$5: void <init>(com.tunesaccess.android.player.TAAudioPlayer)>
<com.tunesaccess.android.player.TAAudioPlayer$4: void <init>(com.tunesaccess.android.player.TAAudioPlayer)>
<com.tunesaccess.android.player.TAAudioPlayer$3: void <init>(com.tunesaccess.android.player.TAAudioPlayer)>
<com.tunesaccess.android.player.TAAudioPlayer$2: void <init>(com.tunesaccess.android.player.TAAudioPlayer)>
<com.tunesaccess.android.player.TAAudioPlayer$1: void <init>(com.tunesaccess.android.player.TAAudioPlayer)>
<java.util.Random: void <init>()>
<android.media.MediaPlayer: void <init>()>
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>
<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer$OnSeekCompleteListener)>
<com.tunesaccess.android.model.SongMapList: void <init>()>
<com.tunesaccess.android.player.TAAudioPlayerController$4: void <init>(com.tunesaccess.android.player.TAAudioPlayerController)>
<com.tunesaccess.android.player.TAAudioPlayerController$3: void <init>(com.tunesaccess.android.player.TAAudioPlayerController)>
<com.tunesaccess.android.player.TAAudioPlayerController$2: void <init>(com.tunesaccess.android.player.TAAudioPlayerController)>
<com.tunesaccess.android.player.TAAudioPlayerController$1: void <init>(com.tunesaccess.android.player.TAAudioPlayerController)>
<com.tunesaccess.android.player.TAAudioPlayerController$2: void onClick(android.view.View)>
<com.tunesaccess.android.player.TAAudioPlayerController: com.tunesaccess.android.player.TAAudioPlayer access$0(com.tunesaccess.android.player.TAAudioPlayerController)>
<com.tunesaccess.android.activity.TagTableActivity$4: void onClick(android.content.DialogInterface,int)>
<android.content.Intent: void <clinit>()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.tunesaccess.android.commons.TAUtils: java.lang.String getTunesAccessBaseUrl()>
<android.net.Uri: void <clinit>()>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<com.tunesaccess.android.activity.TagTableActivity$4: void <init>(com.tunesaccess.android.activity.TagTableActivity)>
<com.tunesaccess.android.player.TAAudioPlayerController$4: void onClick(android.view.View)>
<com.tunesaccess.android.player.TAAudioPlayerController$3: void onClick(android.view.View)>
<com.tunesaccess.android.activity.TagTableActivity$6: void onClick(android.content.DialogInterface,int)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.tunesaccess.android.activity.TagTableActivity$6: void <init>(com.tunesaccess.android.activity.TagTableActivity)>
<com.tunesaccess.android.player.TAAudioPlayerController$1: void onClick(android.view.View)>
<com.tunesaccess.android.activity.TagTableActivity$1: void onClick(android.view.View)>
<com.tunesaccess.android.activity.TagTableActivity$1: void <init>(com.tunesaccess.android.activity.TagTableActivity)>
<com.tunesaccess.android.activity.TagTableActivity: void <init>()>
<com.tunesaccess.android.activity.TagTableActivity: void onCreate(android.os.Bundle)>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>
<com.tunesaccess.android.utils.SystemInfoUtil: java.lang.String getDeviceId(android.content.Context)>
<com.tunesaccess.android.commons.TAUtils: java.lang.String getPassword(android.app.Activity)>
<com.tunesaccess.android.commons.TAUtils: java.lang.String getUsername(android.app.Activity)>
<com.tunesaccess.android.activity.TagTableActivity: void onResume()>
<com.tunesaccess.android.activity.TagTableActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<android.os.Bundle: void <clinit>()>
<com.tunesaccess.android.activity.TagTableActivity: void onActivityResult(int,int,android.content.Intent)>
<com.tunesaccess.android.commons.TAUtils: void setPassword(android.app.Activity,java.lang.String)>
<com.tunesaccess.android.commons.TAUtils: void setUsername(android.app.Activity,java.lang.String)>
<com.tunesaccess.android.utils.NameValueManager: java.lang.String getValue(android.app.Activity,java.lang.String)>
<com.tunesaccess.android.utils.NameValueManager: void setNameValue(android.app.Activity,java.lang.String,java.lang.String)>
<com.tunesaccess.android.model.UserInfo: java.lang.String getUsername()>
<com.tunesaccess.android.model.UserInfo: java.lang.String getPassword()>
<android.app.ListActivity: void onActivityResult(int,int,android.content.Intent)>
<android.app.Activity: android.content.SharedPreferences getPreferences(int)>
<com.tunesaccess.android.activity.TagTableActivity: boolean onContextItemSelected(android.view.MenuItem)>
<android.app.ListActivity: boolean onContextItemSelected(android.view.MenuItem)>
<com.tunesaccess.android.activity.TagTableActivity: void loadSongs(int)>
<com.tunesaccess.android.remote.RemoteGetSongsBySubscriptionAction: void <init>()>
<com.tunesaccess.android.remote.RemoteAction: void setUsername(java.lang.String)>
<com.tunesaccess.android.remote.RemoteAction: void setPassword(java.lang.String)>
<com.tunesaccess.android.remote.RemoteAction: void setDeviceId(java.lang.String)>
<com.tunesaccess.android.remote.RemoteGetSongsBySubscriptionAction: void setSubscription(java.lang.String)>
<com.tunesaccess.android.remote.RemoteGetSongsBySubscriptionAction: void setSongsBySubscriptionListener(com.tunesaccess.android.remote.RemoteGetSongsBySubscriptionAction$RemoteGetSongsBySubscriptionActionListener)>
<com.tunesaccess.android.remote.RemoteAction: void startAction()>
<com.tunesaccess.android.remote.RemoteCheckSession: void <init>()>
<com.tunesaccess.android.remote.RemoteCheckSession: void setSessionListener(com.tunesaccess.android.remote.RemoteCheckSession$RemoteCheckSessionListener)>
<com.tunesaccess.android.remote.RemoteCheckSession: void checkSession(java.lang.String,java.lang.String)>
<com.tunesaccess.android.commons.TAUtils: java.lang.String getTunesAccessUrl(java.lang.String)>
<java.lang.String: void <clinit>()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>
<java.lang.StringBuilder: void <init>(java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.StringBuilder: java.lang.String toString()>
<com.tunesaccess.android.remote.RemoteAsyncAction: void <init>()>
<com.tunesaccess.android.remote.RemoteAsyncAction: void setListener(com.tunesaccess.android.remote.RemoteAsyncAction$RemoteAsyncActionListener)>
<com.tunesaccess.android.remote.RemoteAsyncAction: void doAction(boolean,java.lang.String[])>
<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>
<com.tunesaccess.android.remote.RemoteAsyncAction: java.lang.Object doInBackground(java.lang.Object[])>
<com.tunesaccess.android.remote.RemoteAsyncAction: java.lang.String doInBackground(java.lang.String[])>
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,java.lang.String)>
<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>
<java.lang.StringBuilder: void <init>()>
<java.io.InputStreamReader: void <init>(java.io.InputStream)>
<java.io.BufferedReader: java.lang.String readLine()>
<java.io.BufferedReader: void <init>(java.io.Reader)>
<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List)>
<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>
<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>
<java.util.ArrayList: boolean add(java.lang.Object)>
<java.util.ArrayList: void <init>(int)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<com.tunesaccess.android.remote.RemoteAsyncAction: void requestFailed(java.lang.Exception)>
<android.os.AsyncTask: void <init>()>
<com.tunesaccess.android.remote.RemoteAction: void <init>()>
<com.tunesaccess.android.remote.RemoteGetSongsByTagAction: void <init>()>
<com.tunesaccess.android.remote.RemoteGetSongsByTagAction: void setTagKey(java.lang.String)>
<com.tunesaccess.android.remote.RemoteGetSongsByTagAction: void setSongsByTagListener(com.tunesaccess.android.remote.RemoteGetSongsByTagAction$RemoteGetSongsByTagActionListener)>
<com.tunesaccess.android.remote.RemoteGetAllSongsAction: void <init>()>
<com.tunesaccess.android.remote.RemoteGetAllSongsAction: void setAllSongsListener(com.tunesaccess.android.remote.RemoteGetAllSongsAction$RemoteGetAllSongsActionListener)>
<com.tunesaccess.android.model.UserInfo: java.lang.String getDeviceId()>
<android.app.ListActivity: android.content.res.Resources getResources()>
<com.tunesaccess.android.activity.TagTableActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<android.app.ListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>
<android.os.Bundle: void <init>()>
<android.os.Bundle: void putString(java.lang.String,java.lang.String)>
<android.app.ListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<com.tunesaccess.android.activity.TagTableActivity: boolean prereqOfAction()>
<android.app.ListActivity: void startActivityForResult(android.content.Intent,int)>
<com.tunesaccess.android.utils.SystemInfoUtil: boolean isNetworkAvailable(android.content.Context)>
<com.tunesaccess.android.activity.TagTableActivity$5: void <init>(com.tunesaccess.android.activity.TagTableActivity)>
<android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<android.app.ListActivity: android.content.Context getApplicationContext()>
<com.tunesaccess.android.activity.TagTableActivity$2: void <init>(com.tunesaccess.android.activity.TagTableActivity)>
<android.app.ListActivity: void onResume()>
<com.tunesaccess.android.activity.TagTableActivity: void updateTagAngSubscription()>
<com.tunesaccess.android.remote.RemoteGetSubscriptionAction: void <init>()>
<com.tunesaccess.android.remote.RemoteGetSubscriptionAction: void setSubscriptionListener(com.tunesaccess.android.remote.RemoteGetSubscriptionAction$RemoteGetSubscriptionActionListener)>
<com.tunesaccess.android.remote.RemoteGetTagAction: void <init>()>
<com.tunesaccess.android.remote.RemoteAction: void setRemoteActionListener(com.tunesaccess.android.remote.RemoteAction$RemoteActionListener)>
<com.tunesaccess.android.remote.RemoteGetTagAction: void setGetTagListener(com.tunesaccess.android.remote.RemoteGetTagAction$RemoteGetTagActionListener)>
<com.tunesaccess.android.activity.TagTableActivity: void showLoadTagsToast()>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.tunesaccess.android.player.TAAudioPlayerController: void setAudioManager(android.media.AudioManager)>
<com.tunesaccess.android.player.TAAudioPlayerController: void setModeBtn(android.widget.ImageButton)>
<com.tunesaccess.android.player.TAAudioPlayerController: void setNextBtn(android.widget.ImageButton)>
<com.tunesaccess.android.player.TAAudioPlayerController: void setPlayBtn(android.widget.ImageButton)>
<com.tunesaccess.android.player.TAAudioPlayerController: void setPrevBtn(android.widget.ImageButton)>
<com.tunesaccess.android.player.TAAudioPlayerController: void setTitleTextView(android.widget.TextView)>
<com.tunesaccess.android.player.TAAudioPlayerController: void setVolumeBar(android.widget.SeekBar)>
<com.tunesaccess.android.player.TAAudioPlayerController: void startListening()>
<com.tunesaccess.android.player.TAAudioPlayerController: void updateController()>
<com.tunesaccess.android.player.TAAudioPlayerController: void onPlayTitleChange(java.lang.String)>
<com.tunesaccess.android.player.TAAudioPlayerController: void updateToSystemVolume()>
<com.tunesaccess.android.model.UserInfo: void setUsername(java.lang.String)>
<com.tunesaccess.android.model.UserInfo: void setPassword(java.lang.String)>
<com.tunesaccess.android.model.UserInfo: void setDeviceId(java.lang.String)>
<android.app.ListActivity: void onCreate(android.os.Bundle)>
<android.app.ListActivity: void setContentView(int)>
<android.app.ListActivity: android.view.View findViewById(int)>
<android.app.ListActivity: java.lang.Object getSystemService(java.lang.String)>
<com.tunesaccess.android.activity.TagTableActivity: void fillData()>
<android.app.ListActivity: android.widget.ListView getListView()>
<android.app.ListActivity: void registerForContextMenu(android.view.View)>
<com.tunesaccess.android.activity.TagTableActivity$TagArrayAdapter: void <init>(com.tunesaccess.android.activity.TagTableActivity,android.content.Context,int,java.util.List)>
<android.widget.ArrayAdapter: void notifyDataSetChanged()>
<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
<java.util.ArrayList: void <init>()>
<android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>
<android.app.ListActivity: void <init>()>
<com.tunesaccess.android.activity.SongTableActivity$3: void onClick(android.content.DialogInterface,int)>
<com.tunesaccess.android.activity.SongTableActivity$3: void <init>(com.tunesaccess.android.activity.SongTableActivity)>
<com.tunesaccess.android.activity.SongTableActivity$1: void <init>(com.tunesaccess.android.activity.SongTableActivity)>
<com.tunesaccess.android.activity.SongTableActivity: void <init>()>
<com.tunesaccess.android.activity.SongTableActivity: void onCreate(android.os.Bundle)>
<com.tunesaccess.android.activity.SongTableActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<java.lang.String: boolean equals(java.lang.Object)>
<com.tunesaccess.android.activity.SongTableActivity: android.content.Intent getIntent()>
<com.tunesaccess.android.activity.SongTableActivity: void fillData()>
<com.tunesaccess.android.activity.SongTableActivity$SongArrayAdapter: void <init>(com.tunesaccess.android.activity.SongTableActivity,android.content.Context,int,java.util.List)>
<com.tunesaccess.android.activity.SettingsPageActivity$3: void onClick(android.view.View)>
<com.tunesaccess.android.activity.SettingsPageActivity$3: void <init>(com.tunesaccess.android.activity.SettingsPageActivity)>
<com.tunesaccess.android.activity.SettingsPageActivity$6: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<com.tunesaccess.android.activity.SettingsPageActivity: com.tunesaccess.android.model.UserInfo access$0(com.tunesaccess.android.activity.SettingsPageActivity)>
<com.tunesaccess.android.activity.SettingsPageActivity: void access$2(com.tunesaccess.android.activity.SettingsPageActivity)>
<com.tunesaccess.android.activity.SettingsPageActivity$6: void <init>(com.tunesaccess.android.activity.SettingsPageActivity)>
<com.tunesaccess.android.activity.SettingsPageActivity$2: void onClick(android.view.View)>
<com.tunesaccess.android.activity.SettingsPageActivity$2: void <init>(com.tunesaccess.android.activity.SettingsPageActivity)>
<com.tunesaccess.android.activity.SettingsPageActivity$1: void <init>(com.tunesaccess.android.activity.SettingsPageActivity)>
<com.tunesaccess.android.activity.SettingsPageActivity: void <init>()>
<com.tunesaccess.android.activity.SettingsPageActivity: void onResume()>
<android.app.Activity: void onResume()>
<com.tunesaccess.android.activity.SettingsPageActivity: void updateUI()>
<com.tunesaccess.android.activity.SettingsPageActivity: void updateUILogin()>
<com.tunesaccess.android.activity.SettingsPageActivity: void updateUIUpgradeBtn()>
<com.tunesaccess.android.activity.SettingsPageActivity: void sendMembershipInfoRequest()>
<com.tunesaccess.android.remote.RemoteGetAccountInfoAction: void <init>()>
<com.tunesaccess.android.remote.RemoteGetAccountInfoAction: void setAccountInfoListener(com.tunesaccess.android.remote.RemoteGetAccountInfoAction$RemoteGetAccountInfoActionListener)>
<com.tunesaccess.android.activity.SettingsPageActivity: void showLoadAccountToast()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.tunesaccess.android.activity.SettingsPageActivity: void onCreate(android.os.Bundle)>
<com.tunesaccess.android.activity.SettingsPageActivity$5: void <init>(com.tunesaccess.android.activity.SettingsPageActivity)>
<com.tunesaccess.android.activity.SettingsPageActivity$4: void <init>(com.tunesaccess.android.activity.SettingsPageActivity)>
<com.tunesaccess.android.activity.SettingsPageActivity$1: void onClick(android.view.View)>
<android.app.Activity: void setResult(int)>
<android.app.Activity: void finish()>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>
<android.app.Activity: void startActivity(android.content.Intent)>
<com.tunesaccess.android.model.SongMapList: java.util.List getData()>
<com.tunesaccess.android.player.TAAudioPlayerController: void playSongAtIndex(int)>
<com.tunesaccess.android.player.TAAudioPlayer: void playSongAtIndex(int)>
<com.tunesaccess.android.remote.RemoteGetPlaySongUrlAction: void <init>()>
<com.tunesaccess.android.remote.RemoteGetPlaySongUrlAction: void setSongKey(java.lang.String)>
<com.tunesaccess.android.remote.RemoteGetPlaySongUrlAction: void setPlaySongUrlListner(com.tunesaccess.android.remote.RemoteGetPlaySongUrlAction$RemoteGetPlaySongUrlActionListener)>
<com.tunesaccess.android.player.TAAudioPlayer: void stop()>
<com.tunesaccess.android.player.TAAudioPlayer: void sendOnStartStreaming()>
<com.tunesaccess.android.player.TAAudioPlayer: void setPlayerState(int)>
<android.media.MediaPlayer: void stop()>
<android.media.MediaPlayer: void reset()>
<com.tunesaccess.android.activity.SongTableActivity$1: void onClick(android.view.View)>
<android.app.ListActivity: void setResult(int)>
<android.app.ListActivity: void finish()>
<android.app.ListActivity: void startActivity(android.content.Intent)>
<com.tunesaccess.android.player.TAAudioPlayer: int getPlayerState()>
<com.tunesaccess.android.player.TAAudioPlayer: java.lang.String getPlayingTitle()>
<com.tunesaccess.android.player.TAAudioPlayer: int getPlayMode()>
<com.tunesaccess.android.player.TAAudioPlayer: void setListener(com.tunesaccess.android.player.TAAudioPlayer$TAAudioPlayerListener)>
<com.tunesaccess.android.player.TAAudioPlayer: void setParentActivity(android.app.Activity)>
<com.tunesaccess.android.remote.RemoteCheckSession: void requestFailed(java.lang.Exception)>
<com.tunesaccess.android.remote.RemoteAction: void receiveRemoteCheckSessionResponse(boolean)>
<com.tunesaccess.android.remote.RemoteAction: void signInAndRestart()>
<java.lang.System: void <clinit>()>
<com.tunesaccess.android.remote.RemoteSignInAction: void <init>()>
<com.tunesaccess.android.remote.RemoteSignInAction: void setSignInListener(com.tunesaccess.android.remote.RemoteSignInAction$RemoteSignInActionListener)>
<com.tunesaccess.android.remote.RemoteSignInAction: void signIn(java.lang.String,java.lang.String,java.lang.String)>
<java.lang.String: int length()>
<com.tunesaccess.android.player.TAAudioPlayer: void playOrPause()>
<com.tunesaccess.android.player.TAAudioPlayer: void sendOnPlayTitleChange(java.lang.String)>
<com.tunesaccess.android.player.TAAudioPlayer: void playNext()>
<com.tunesaccess.android.player.TAAudioPlayer: int getRandomSongIndex()>
<com.tunesaccess.android.player.TAAudioPlayer: void playNextIndex(int)>
<java.lang.Math: int abs(int)>
<java.util.Random: int nextInt()>
<android.media.MediaPlayer: boolean isPlaying()>
<android.media.MediaPlayer: void pause()>
<android.media.MediaPlayer: void start()>
<com.tunesaccess.android.player.TAAudioPlayer: void playPrevious()>
<com.tunesaccess.android.player.TAAudioPlayer: void nextPlayMode()>
<com.tunesaccess.android.player.TAAudioPlayer: void setPlayMode(int)>
<com.tunesaccess.android.player.TAAudioPlayerController: void onPlayModeChange(int,int)>
<com.tunesaccess.android.player.TAAudioPlayerController: void setAudioVolume(int)>
<com.tunesaccess.android.player.TAAudioPlayerController: void onStateChange(int,int)>
<com.tunesaccess.android.player.TAAudioPlayerController: void onStartStreaming()>
<com.tunesaccess.android.player.TAAudioPlayerController: void sendOnStartStreaming()>
<com.tunesaccess.android.activity.TagTableActivity: void onStartStreaming()>
<com.tunesaccess.android.activity.SongTableActivity: void onStartStreaming()>
<com.tunesaccess.android.activity.SongTableActivity: void showStreamingProgressDialog()>
<com.tunesaccess.android.activity.TagTableActivity: void showStreamingProgressDialog()>
<com.tunesaccess.android.remote.RemoteSignInAction: void requestFailed(java.lang.Exception)>
<com.tunesaccess.android.remote.RemoteSignInAction: void sendResult(boolean)>
<com.tunesaccess.android.remote.RemoteAction: void receiveSignInResult(boolean)>
<android.util.Log: int w(java.lang.String,java.lang.String)>
<java.lang.Object: java.lang.Class getClass()>
<java.lang.Class: java.lang.String getName()>
<com.tunesaccess.android.activity.TagTableActivity: void cannotSignIn()>
<com.tunesaccess.android.activity.TagTableActivity$7: void <init>(com.tunesaccess.android.activity.TagTableActivity)>
<com.tunesaccess.android.activity.TagTableActivity: void hideGetSongProgressDialog()>
<com.tunesaccess.android.activity.TagTableActivity: void hideGetTagProgressDialog()>
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<java.lang.CharSequence: java.lang.String toString()>
<android.content.res.Resources: java.lang.CharSequence getText(int)>
<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>
<android.widget.SeekBar: int getProgress()>
<android.view.MenuItem: int getItemId()>
<java.io.PrintStream: void println(java.lang.String)>
<java.util.List: java.util.Iterator iterator()>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<android.app.AlertDialog: void show()>
<java.util.List: int size()>
<android.widget.Toast: void show()>
<android.widget.EditText: void setText(java.lang.CharSequence)>
<java.io.UnsupportedEncodingException: void printStackTrace()>
<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>
<android.widget.ImageButton: void setImageResource(int)>
<android.content.Intent: android.os.Bundle getExtras()>
<java.io.IOException: void printStackTrace()>
<android.widget.Button: void setText(java.lang.CharSequence)>
<java.util.Map: java.lang.Object get(java.lang.Object)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>
<java.lang.String: java.lang.String trim()>
<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>
<java.util.List: java.lang.Object get(int)>
<android.content.SharedPreferences$Editor: boolean commit()>
<android.widget.Toast: void setGravity(int,int,int)>
<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<android.app.ProgressDialog: void hide()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.content.res.Resources: java.lang.String getString(int)>
<android.widget.EditText: void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)>
<java.util.Iterator: boolean hasNext()>
<org.apache.http.HttpEntity: java.io.InputStream getContent()>
<android.view.MenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<org.apache.http.client.ClientProtocolException: void printStackTrace()>
<android.webkit.WebView: boolean canGoBack()>
<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>
<android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>
<java.lang.String: int compareTo(java.lang.String)>
<android.webkit.WebView: void goBack()>
<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>
<java.util.Iterator: java.lang.Object next()>
<android.view.ContextMenu: android.view.MenuItem add(int,int,int,int)>
